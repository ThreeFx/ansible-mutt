# {{ ansible_managed }}
# Kudos to the Arch wiki! https://wiki.archlinux.org/index.php/OfflineIMAP
[general]
accounts = {% for account in mail_accounts %}{{ account.name }}{% if not loop.last %}, {% endif %}{% endfor %}

# Controls how many accounts may be synced simultaneously
maxsyncaccounts = 5
pythonfile = {{ mail_config_dir }}/offlineimap.py

{% for account in mail_accounts %}
#######################################################################
# {{ account.desc }}

[Account {{ account.name }}]
localrepository = {{ account.name }}.Local
remoterepository = {{ account.name }}.Remote
# Status cache. Default is plain, which eventually becomes huge and slow.
status_backend = sqlite
# Minutes between syncs
autorefresh = 5
# Number of quick-syncs between autorefreshes. Quick-syncs do not update if the
# only changes were to IMAP flags
quick = 10

[Repository {{ account.name }}.Local]
type = Maildir
localfolders = {{ mail_maildir }}
nametrans = lambda folder: re.sub('{{ mail_local_inbox }}.{{ account.name }}', '{{ account.imap.inbox }}',
                           re.sub('{{ mail_local_drafts }}.{{ account.name }}', '{{ account.imap.drafts }}',
                           re.sub('{{ mail_local_sent }}.{{ account.name }}', '{{ account.imap.sent }}', folder)))

[Repository {{ account.name }}.Remote]
type = IMAP
remotehost = {{ account.imap.server }}
ssl = yes
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
remoteuser = {{ account.user }}
remotepasseval = read("{{ mail_password_dir }}/{{ account.name }}")
folderfilter = lambda foldername: foldername in ['{{ account.imap.inbox }}', '{{ account.imap.drafts }}', '{{ account.imap.sent }}']
createfolders = false
nametrans = lambda folder: re.sub('{{ account.imap.inbox }}', '{{ mail_local_inbox }}.{{ account.name }}',
                           re.sub('{{ account.imap.drafts }}', '{{ mail_local_drafts }}.{{ account.name }}',
                           re.sub('{{ account.imap.sent }}', '{{ mail_local_sent }}.{{ account.name }}', folder)))
{% endfor %}
